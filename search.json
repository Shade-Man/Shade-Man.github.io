[{"title":"如何在本博客发布文章","url":"/2021/12/16/how-to-edit-blog/","content":"\n> **~~在博客发布文章是什么意思？小伙靠它月赚 500w！~~**  \n> ~~众所周知，在此博客发布文章是最近非常火的一个词。那么在此博客发布文章到底是什么梗呢？相信大家对在此博客发布文章都很熟悉，在此博客发布文章就是我们每天都会经常遇到的，但是在此博客发布文章是怎么回事呢？就由小编来为大家介绍一下。~~  \n> :smirk: (doge)\n\n<!-- more -->\n\n咳咳, 此篇文章旨在教会新手如何使用 [Hexo](https://hexo.io/zh-cn/) 在本博客发表文章  \n_(有误还请大佬指正)_\n\n## 准备工作\n\"工欲善其事，必先利其器\"  \n让我们得到必要的工具, 再开始你的 ~~月赚 500w~~ 发表文章之路\n\n### 前期准备\n你需要以下东西:\n* [Node.js](https://nodejs.org/zh-cn/): [配置教程](https://www.runoob.com/nodejs/nodejs-install-setup.html)\n* [Git](https://git-scm.com/): [使用教程](https://www.runoob.com/git/git-tutorial.html)\n* [Github](https://github.com/) 账户\n* Markdown 知识: [教程](https://www.runoob.com/markdown/md-tutorial.html)\n* [Visual Studio Code](https://code.visualstudio.com/) (VS Code)\n* 你聪明的脑袋\n\n配置好以上东西以后, 加入到我们的 Github 组织 [Shade-Man](https://github.com/Shade-Man)    \n_联系 <stars_sea@outlook.com>_  \n_(因为文章源文本只有组织成员才能看见)_\n\n> #### 注意\n> Node.js v14 需要 Windows 8 以上环境, Windows 7 的同学可以下载 v12  \n> LTS (长期支持版本) 在 [这里](https://nodejs.org/en/about/releases/) 下载\n>\n> Github 进不去正常, ~~建议科学上网~~, 多刷亿遍\n>\n> VS Code 建议下载 `System Installer` _(如果环境是 Windows)_\n\n### 环境配置\n1.  安装 `hexo-cli` 库\n    ```powershell\n    $ npm i -g hexo-cli\n    ```\n\n2.  找一个文件夹, 克隆 [Shade-Man/HexoBlog](https://github.com/Shade-Man/HexoBlog \"源文本仓库\") 仓库  \n    _(任选一条)_\n    ```powershell\n    $ git clone https://github.com/Shade-Man/HexoBlog.git\n    $ git clone git@github.com:Shade-Man/HexoBlog.git\n    ```\n\n    完成后你会看见 `done` 这个字眼, 反之多试几次 ~~(实在不行科学上网)~~\n\n3.  进入克隆的文件夹, 执行这条命令, 下载必要库  \n    _(任选一条, 第二条使用淘宝镜像下载)_\n    ```powershell\n    $ npm i\n    $ npm i --registry=https://registry.npm.taobao.org\n    ```\n\n## 施展才华\n经过以上步骤, 你的编写环境准备就绪  \n还差一步, 你就可以在此博客施展你的才华了\n\n### 准备编写\n1.  在你克隆的仓库 (文件夹) 打开 VS Code\n\n2.  找到 VS Code 顶上的 `终端` / `Terminal`  \n    新建一个终端 (`新建终端` / `New Terminal`)\n\n3.  在终端内输入 `hexo new \"文章名称\"`  \n    如果成功, 你会看见这样的输出\n    ```powershell\n    $ hexo new \"文章名称\"\n    INFO  Validating config\n    INFO  Created: D:\\Repos\\HexoBlog\\source\\_posts\\文章名称.md\n    ```\n\n4.  之后, 你就可在 `D:\\Repos\\HexoBlog\\source\\_posts\\文章名称.md`  \n    利用 Markdown 写新的文章 _(VS Code 右上角可打开预览)_\n\n### 预览, 发布!\n在写完后, 请务必记得保存\n\n在终端输入 `hexo s` 可在本机打开服务器  \n在浏览器输入给定地址, 即可预览博客\n\n比如 ~~(可能会有报错, 一般不用怎么管)~~:\n```powershell\n$ hexo s\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.\n```\n在浏览器输入 <a>http://localhost:4000</a> 即可预览  \n在终端按下 `Ctrl` + `C` 即可关闭服务器\n\n确认无误后, 可输入 `hexo d` 将博客上传到 [Github Pages](https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages)  \n等待一会, 你就可在 https://shade-man.github.io 看到你的文章了\n\n> #### Hexo 命令选项\n> * `clean`: 清除缓存文件之类的\n> * `deploy` / `d`: 将你的网站部署到你的远程仓库\n> * `generate` / `g`: 生成网站静态文件\n> * `new` / `n`: 创建新的文章\n> * `server` / `s`: 开启 Hexo 服务器\n>\n> **建议:** 在执行 `hexo d|g|s` 时请将命令替换成 `hexo clean && hexo d|g|s`\n\n## 与他人协作\n在对本仓库进行更改后, 请上传回 Github  \n使他人的 Hexo 源文件与你的保持同步\n\n### 上传 / Push\n*   利用 git:\n    ```powershell\n    $ git add .\n    $ git commit -m \"你此次更改的注释\"\n    $ git push origin master\n    ```\n*   使用 [Github Desktop](https://desktop.github.com/) 的~~傻瓜式~~操作\n*   使用 VS Code 自带的源代码管理\n\n### 拉取&合并 / Fetch & Merge\n在每次准备更改此仓库之前, 建议执行以下操作:\n```powershell\n$ git fetch\n$ git merge\n```\n_(也可使用 `git pull`, 但网上不推荐, 理由百度)_\n\nGithub Desktop 和 VS Code 也可以拉取, 也更方便\n\n-----\n这就是如何在本博客发布文章, 你学废了吗?  \n~~欢迎在评论区留言与小编一起讨论~ 233 :smirk:~~\n\n什么? 不会? _~~不会多百度~~_\n","tags":["信息"],"categories":["教程"]},{"title":"2021 年贵青杯竞赛题","url":"/2021/12/11/senior-python-guiqingbei21/","content":"\n2021 贵青杯 Python 竞赛题\n\n<!-- more -->\n\n## 乘车费用\n### 描述\n星期天上午小红乘出租车去本市的奶奶家。出租车计价方案为：  \n3 km 以内（包括 3 km）起步价是 13 元，  \n超过 3 km 之后按 2.3 元/km 计价，  \n整个乘车途中另加 1 元钱的燃油费。\n\n已知：小红到奶奶家的路程为 N km，请你计算一下小红到奶奶家的出租车费用是多少元？\n\n### 输入\n输入 1 个整数 $N (1 \\leq N \\leq 30)$ 表示路程，单位：km。\n\n### 输出\n输出 1 个数，表示出租车费用，只输出整数部分。\n\n### 样例\n```powershell\n> 2\n14\n```\n```powershell\n> 15\n41\n```\n\n## 彩票\n### 描述\n大乐透彩票的获奖编码由两位非零数组成。  \n根据获奖编码和用户的输入，可以确定用户是否获奖，具体规则为：\n\n* 如果用户输入的数与获奖编码完全相同，奖金 100 元\n* 如果用户输入的所有数字匹配获奖编码的所有数字，奖金 20 元\n* 如果用户输入的数字能够匹配获奖编码的一个数字，奖金 2 元\n* 如果没有获奖，则奖金 0 元\n\n程序输入获奖编码和用户的输入，判断用户最终能获得多少奖金。\n\n### 输入\n你的程序将会接受两个两位整数，分别表示获奖编码和用户的输入。\n\n### 输出\n输出一个整数，表示用户的奖金。\n\n### 样例\n```powershell\n> 97 79\n20\n```\n```powershell\n> 36 43\n2\n```\n\n## 奇怪的信\n### 描述\n一天，小明收到一张奇怪的信，信上要小明计算出给定数各个位上数字为偶数的和。  \n小明很苦恼，想请你帮忙解决这个问题。\n\n> 例：$5548$，结果为 $4 + 8 = 12$\n\n### 输入\n输入一个正整数，保证数字在 32 位整型范围内。\n\n### 输出\n输出一个整数表示答案。\n\n### 样例\n```powershell\n> 415326\n12\n```\n```powershell\n> 3262\n10\n```\n\n## 闪电\n### 描述\n看吧，星星只有在夜里才璀璨夺目啊。而闪电，则以更耀眼的姿势一闪而过。\n\n夜里，乐乐走在路上，今晚不见璀璨的星星。本是宁静的夜色，猛地一道闪电劈过，正砸乐乐的头顶。\n\n第二天乐乐醒来并发现自己在路上躺着，想起昨晚最后看到的一道闪电，知道事情并没有那么简单。脑子仿佛像是被闪电劈傻了一样，乐乐突然很想打代码，具体的看看闪电的模样，但是他的脑子被劈的有点焦，所以他只能请求你帮他打下这样的代码，并展示给他看。\n\n> ~~就尼玛离谱 _--By Author_~~\n\n### 输入\n第一行一个正整数 $n (0 < n < 100)$，表示闪电的大小。\n\n### 输出\n输出数据对应一个大小的闪电，行末无空格。\n\n### 样例\n```powershell\n> 1\n *\n**\n*\n```\n```powershell\n> 2\n  *\n *\n***\n *\n*\n```\n\n## 挂盐水\n> **Note:**  \n> 此题输入输出描述与样例不符  \n> 已做出修改使其与样例匹配，原题见 [挂盐水原题](#挂盐水原题)\n### 描述\n挂盐水的时候，如果滴起来有规律，先是滴一滴，停一下；然后滴二滴，停一下；再滴三滴，停一下...\n\n这瓶盐水一共有 V mL，每一滴是 D mL。  \n若每一滴的速度是 1s（最后一滴不到 D mL 也算 1s），停一下的时间也是 1s。  \n那么这瓶水什么时候能挂完呢？\n\n### 输入\n输入两个数据, $V, D (0 < D < V < 5000)$\n\n### 输出\n输出挂完盐水需要的时间。\n\n### 样例\n```powershell\n> 10 1\n13\n```\n\n## 彩笔\n### 描述\n乐乐喜欢画画，她有很多颜色的彩笔：“赤、橙、黄、绿、蓝、靛、紫、黑”。  \n他还有一个 16 格的彩笔盒，每个格子正好放一支彩笔。每次上课会根据需要装彩笔，并且都会装满彩笔盒。\n\n有时彩笔盒里会出现 2 支颜色相同的彩笔（颜色相同的笔只会有一种，且最多只有 2 支）\n例如：\n|A  |B  |C  |D  |E  |F  |A  |H  |I  |J  |P  |L  |M  |N  |O  |T  |\n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n|1  |2  |3  |4  |5  |6  |7  |8  |9  |10 |11 |12 |13 |14 |15 |16 |\n\n其中每个大写字母代表一种颜色的彩笔，第 1 支与第 7 支的彩笔颜色相同。\n\n### 输入\n输入只有 16 个大写字母，分别代表彩笔的不同颜色。\n\n### 输出\n如果 16 支笔的颜色各不相同，输出 `different`。\n\n若有 2 支笔的颜色一样，以先小后大的顺序输出 2 支相同颜色笔的位置序号 (用空格分开)\n\n### 样例\n```powershell\n> ABCDEFAHIJPLMNOT\n1 7\n```\n\n## 翻纸牌\n### 描述\n有 n 张纸牌,每张纸牌上分别标注着 1、2、3、4...n 个数字，初始时纸牌数字面朝上。  \n先将 1 的倍数的纸牌翻过来，再将 2 的倍数翻过来，一直翻到 n 的倍数的纸牌。\n\n统计翻到最后数字面向下的纸牌分别是哪些？\n\n> **Example:**  \n> 有 1、2、3 张纸牌，开始时纸牌数字面朝上，  \n> 第一次将所有序号为 1 的倍数的纸牌翻转  \n> 第二次将所有序号是 2 的倍数的纸牌再翻转  \n> 第三次将所有序号是 3 的倍数纸牌再翻转  \n> 最后数字面向下的纸牌是序号为 1 的那张。\n\n### 输入\n输入数字 $n (n \\leq 10000)$。\n\n### 输出\n在同一行输出数字面向下的纸牌数字，两个数字之间用一个空格隔开。\n\n### 样例\n```powershell\n> 3\n1\n```\n\n## 最长最短单词\n### 描述\n输入 1 行句子（不多于 200 个单词，每个单词长度不超过 100），只包含字母、空格。  \n单词由至少一个连续的字母构成，空格是单词间的间隔。\n> ~~你在教我做事? _--By Author_~~\n\n试输出第 1 个最长的单词和第 1 个最短单词。\n\n### 输入\n一行句子。\n\n### 输出\n* 第 1 行，第一个最长的单词\n* 第 2 行，第一个最短的单词\n\n### 样例\n```powershell\n> I am studying Programming language C in Peking University\nProgramming\nI\n```\n\n## 敲 7\n### 描述\n有一种酒桌游戏叫做“敲 7”，规则是从一个人开始，说出任意数字，其他人会顺序往后报，如果一个数字包含 7，或者是 7 的倍数，那么需要敲打杯子或盘子，不能说出。\n\n现在 n 个人围坐在一个圆桌周围，他们编号从 1 到 n 顺时针排列。从某一人开始报出一个数字，其他人会按照顺时针方向顺序往后报(加一)，如果某个人的数字包含 7，或者是 7 的倍数，那么他将退出游戏，下一个人继续接着报，直到剩一个人为止。\n\n### 输入\n第一行输入三个整数, $n, m, t (1 \\leq m \\leq n \\leq 1000，1 \\leq t \\leq 100)$\n> n 代表总人数,  m 代表从第 m 个人开始报数，且其报出的数字是 t\n\n接下来输入 n 行字符串，代表他们的名字，字符串的长度不超过 20。\n\n### 输出\n输出剩下的那个人的名字。\n\n### 样例\n```powershell\n> 5 3 20\n> donglali\n> nanlali\n> xilali\n> beilali\n> chuanpu\nchuanpu\n```\n\n## 采购奖品\n### 描述\n马上又到了新年联欢，乐乐作为班里的班长，负责组织策划新年联欢活动，  \n他决定采购一些奖品奖励积极参与每个项目活动的同学。\n\n为了激励更多的人参与，需采购的奖品数目越多越好。  \n班费中可支出的钱数为 m 元，现给定商店中 n 种物品的价格和库存数量  \n怎样才能购得最多的物品数？\n\n### 输入\n输入一共 $(n + 1)$ 行：\n\n第一行包含两个正整数 $m, n (1 < m \\leq 10000, 1 \\leq n \\leq 100)$  \n可支出的费用为 $m$ 元和可供购买的物品有 $n$ 种\n\n接下来的 n 行，每行包含两个数 (空格分隔) $a_i, b_i (a_i, b_i \\leq 1000)$  \n物品的单价为 $a_i$ 和库存数量为 $b_i$\n\n### 输出\n最多可以购买的物品数量\n\n### 样例\n```powershell\n> 500 6\n> 100 3\n> 20 15\n> 50 10\n> 35 5\n> 5 6\n> 60 2\n25\n```\n\n## 挂盐水原题\n### 描述\n挂盐水的时候，如果滴起来有规律，先是滴一滴，停一下；然后滴二滴，停一下；再滴三滴，停一下......\n\n现在有一个问题：这瓶盐水一共有 V mL，每一滴是 D mL\n\n如果每一滴的速度是 1s（假设最后一滴不到 D mL，则花费的时间也算 1s），停一下的时间也是 1s。\n\n那么这瓶水什么时候能挂完呢？\n\n### 输入\n输入数据包含多个测试实例，每个实例占一行 $V, D (0 < D < V < 5000)$\n\n### 输出\n对于每组测试数据，请输出挂完盐水需要的时间，每个实例的输出占一行。\n\n### 样例\n```powershell\n> 10 1\n13\n```\n","tags":["比赛"],"categories":["习题"]},{"title":"Python 高中组比赛练习题","url":"/2021/10/05/senior-python-test21/","content":"\n[贵阳市第十届机器人大赛](http://www.gykp.cn/c7771/20210914/i2339870.html)[高中组 Python创意编程](http://www.gykp.cn/gygov/DFS//file/2021/09/06/202109061057343598gvk42.pdf)的样题展示 ~~(包含答案)~~\n\n<!-- more -->\n\n_**答案仅供参考**, 因为答案是我写的, 不是官方给的_\n\n## 样题一\n某医院想统计某项疾病的获得与否与年龄是否有关，对以前的诊断记录进行整理，  \n按 $[0, 18]$、$[19, 35]$、$[36, 60]$、$[61, 100]$ 四个年龄段统计的患病人数占总患病人数的比例。\n\n### 输入\n一共有两行输入:\n1. 病人数目 n 且 $n \\in (0, 100]$\n2. 每个病人年龄 y ($\\{y\\in N|0 \\leq y \\leq 100\\}$), 用空格分隔\n\n### 输出\n按$[0, 18]$、$[19, 35]$、$[36, 60]$、$[61, 100]$ 四个年龄段输出该段人数占比，  \n以百分比的形式输出，精确到小数点后两位。每个年龄段占一行，共四行。\n\n### 样例\n```powershell\n> 10\n> 1 11 21 31 41 51 61 71 81 91\n20.00%\n20.00%\n20.00%\n40.00%\n```\n\n### 答案\n```python\nn = int(input())\ns = [int(i) for i in input().split(' ')]\n\nchild, teen, adult, elder = 0, 0, 0, 0\nfor patient in s:\n    if 0 <= patient <= 18:\n        child += 1\n    elif 19 <= patient <= 35:\n        teen += 1\n    elif 36 <= patient <= 60:\n        adult += 1\n    elif 61 <= patient <= 100:\n        elder += 1\n\nfor i in (child, teen, adult, elder):\n    print('{:.2f}%'.format((i / n) * 100))\n```\n\n## 样题二\n输出 n 阶 X 标志\n\n### 输入\n$n \\in \\{n \\in N | 3 \\leq n \\leq 499, n = 2a + 1, a \\in N\\}$\n\n### 样例\n```powershell\n> 5\nX   X\n X X \n  X  \n X X \nX   X\n```\n\n### 答案\n```python\nn = int(input())\n\nif 3 <= n <= 499 and n % 2 == 1:\n    \"\"\"\n    如果 n == 5, 则 l 如下\n    [\"  X  \",\n     \" X X \",\n     \"X   X\"]\n    \"\"\"\n    l = [\n        ('X' + ' '*i + 'X').center(n)\n        for i in range(1, n, 2)\n    ]\n    l.insert(0, 'X'.center(n))\n\n    reverse = l[::-1]       # reverse 为 l 的反转\n    l = [*reverse[:-1], *l] # '*' 运算符为拆箱, 具体百度 (也可以用 '+=')\n\n    print('\\n'.join(l))\n```\n\n## 样题三\n一人前来接种疫苗，注射完第一剂后，医生告诉她 14 天后再来注射第二剂。  \n给定接种第一剂疫苗的日期，请输出注射第二剂的日期。\n\n### 输入\n接种第一剂疫苗的日期 `y-m-d`  \n其中 `y` 表示年份、`m` 表示月, `d` 表示天数\n\n$2000 \\leq y \\leq 3000$  \n$1 \\leq m \\leq 12$  \n$1 \\leq d \\leq 31$\n\n### 样例\n```powershell\n> 2021-3-12\n2021-3-26\n```\n\n### 答案\n```python\n# datetime 用法自行百度\nfrom datetime import datetime, timedelta\n\ns = [int(i) for i in input().split('-')[:3]]\nt = datetime(*s)                        # datetime.datetime(s[0], s[1], s[2])\nt += timedelta(days=14)\n\nprint(f'{t.year}-{t.month}-{t.day}')    # 不用 strftime 是因为不要自动补 0\n```\n\n## 样例四\n对一个十进制下的四位数来说，用以下过程将它加密成另一个四位数:\n1. 将这个整数的个位和千位对调, 十位和百位对调\n2. 把这个整数的每一位 0 换成 9  \n   把这个整数的每一位 1 换成 8  \n   (其他数字以此类推...)\n   把这个整数的每一位 9 换成 0\n\n输出这个数字\n\n_需要保证输入数字有且仅有 4 位_\n\n### 样例\n```powershell\n> 8429\n0751\n```\n```powershell\n> 6788\n1123\n```\n\n### 答案\n```python\ns = int(input())\n\nif 1000 <= s <= 9999:                           # 保证为四位数\n    s = [int(i) for i in str(s)[::-1]]          # 对调, 并转为数组\n\n    m = list(range(9, -1, -1))                  # [9, 8, ..., 0]\n    n = ''.join([str(m[int(i)]) for i in s])    # 用下标对应\n    print(n)\n```\n\n## 样例五\n乐乐在纸上写了一个串, 只包含 `(`和 `)`   \n`(` 只能唯一匹配一个 `)`，但 `(` 必须出现在 `)` 之前。  \n请判断乐乐写的字符串能否括号完全匹配\n\n### 输入\n一共输入两行:\n1. 整数 n 且 $\\{n\\in N | 0 \\leq n \\leq 100\\}$\n2. 只含 `(` 和 `)` 字符串，输入的字符串长度为 n\n\n### 输出\n如果输入括号不能匹配, 输出 `NO`，否则输出 `YES`\n\n### 样例\n```powershell\n> 4\n> (())\nYES\n```\n```powershell\n> 4\n> ())(\nNO\n```\n\n### 答案\n```python\nn, s = int(input()), input()\n\na = 0       # 有多少 '(' 待匹配\nfor i in s:\n    if i == '(':\n        a += 1\n    if i == ')':\n        a -= 1\n    \n    if a < 0:\n        break\n\nprint('YES' if a == 0 else 'NO')\n    \n```\n","tags":["测验","比赛"],"categories":["习题"]},{"title":"Python 初中组比赛练习题","url":"/2021/10/05/junior-python-test21/","content":"\n[贵阳市第十届机器人大赛](http://www.gykp.cn/c7771/20210914/i2339870.html)[初中组 Python创意编程](http://www.gykp.cn/gygov/DFS//file/2021/09/06/202109061057343598gvk42.pdf)的样题展示 ~~(包含答案)~~\n\n<!-- more -->\n\n_**答案仅供参考**, 因为答案是我写的, 不是官方给的_\n\n## 样题一\n某国参加了今年的东京奥运会，斩获了不少奖项。  \n该国一共参加了 n 个项目的比赛，比赛结果中金牌、银牌、铜牌和未获奖分别用 G、S、B 和 N 表示，统计该国的战果吧。\n\n### 输入\n一共有两行输入:\n1. 有一个整数 n, $1 \\leq n \\leq 200$，是该国拥有的奖项的个数\n2. 有用空格隔开的 n 个字符，每个字符一定是 G、S、B 和 N 中的一个，是该国每个项目的比赛结果。\n\n### 输出\n输出一行，为三个空格隔开的整数，分别表示该国获得的金牌、银牌和铜牌的个数。\n\n### 样例\n> `> ...` 代表输入  \n> 无前缀则代表输出\n```powershell\n> 4\n> S S B N\n0 2 1\n```\n\n### 答案\n```python\nn = int(input())\ns = input()\n\nG, S, B = 0, 0, 0       # 声明元组并拆箱\nfor i in s[:2 * n:2]:   # s[:2 * n: 2] 为每隔一个字符, 忽略一个\n    if i == 'G':        #   如: 'G S B' => 'GSB'\n        G += 1\n    elif i == 'S':\n        S += 1\n    elif i == 'B':\n        B += 1\n\nprint(G, S, B)\n```\n\n## 样题二\n最近，谷歌公司做出了一项决定，由于 blacklist（黑名单）这个词语涉及对有色人种的歧\n视，所以需要将它们修改成 blocklist（屏蔽名单）。\n\n_给定一个仅仅由小写字母组成的字符串 s, 请将所有的 `blacklist` 全部替换成 `blocklist`_\n\n### 输入\n设字符串的长度为 $|s|$, 则对于所有的数据, $1≤|s|≤2000$\n\n### 样例\n```powershell\n> She was on the company's blacklist.\nShe was on the company's blacklist.\n```\n\n### 答案\n```python\nprint(input().replace('blacklist', 'blocklist')[:2001])\n```\n\n## 样题三\n给定一个正整数 n，请打印一个空心正方形，边界由 `*` 构成，边长为 n。\n\n### 输入\n$3 \\leq n \\leq 50$ $n \\in N$\n\n### 样例\n```powershell\n> 5\n*****\n*   *\n*   *\n*   *\n*****\n```\n\n### 答案\n```python\nn = int(input())                # 假设 n == 5\n\nif 3 <= n <= 50:\n    w = n - 2                   # w == 3\n    t = '*' * n                 # t == '*****'\n    c = '*' + ' '*w + '*'       # c == '*   *'\n    print(t)\n    print('\\n'.join([c] * w))   # 将列表 [c] * w 中每个元素拼接, 并用 '\\n' 换行\n    print(t)\n```\n\n## 样题四\n数学上有个水仙花数，他是这样定义的：\n水仙花数：是指一个三位数，它的各位数字的立方和等于其本身，比如：\n$153 = 1^3 + 5^3 + 3^3$  \n现在要求输出所有在 $[m, n]$ 内的水仙花数。\n\n### 输入\n输入一行，包括两个整数 $m, n (100 \\leq m \\leq n \\leq 999)$。\n\n### 输出\n输出所有在范围内的水仙花数，从小到大排列在一行内输出，用一个空格隔开;  \n如果不存在，则输出 `no`;\n\n### 样例\n```powershell\n> 100 120\nno\n```\n```powershell\n> 300 380\n370 371\n```\n\n### 答案\n```python\ndef check(num: int) -> bool:                            # 检测 num 是否为水仙花数\n    l = [int(s) for s in str(num)]                      # 123 => [1, 2, 3]\n    cube_sum = sum([n ** 3 for n in l])                 # [1, 2, 3] => sum([1**3, 2**3, 3**3])\n    return cube_sum == num\n\n\nm, n = [int(i) for i in input().split(' ')[:2]]         # \"123 456\" => (123, 456)\n\nif 100 <= m <= n <= 999:\n    s = [str(i) for i in range(m, n + 1) if check(i)]   # n + 1 是为了处理 \"后开\"\n    if len(s) != s:\n        print(' '.join(s))\n    else:\n        print(\"no\")\nelse:\n    print(\"no\")\n```\n\n## 样题五\n有一口深度为 `high` 米的水井，井底有一只青蛙,  \n它每天白天能够沿井壁向上爬 `up` 米,  \n夜里则顺井壁向下滑 `down` 米\n\n若青蛙从某个早晨开始向外爬，对于任意自然数 `high`、`up` 和 `down` 值,  \n计算青蛙多少天能够爬出井口\n\n_**注意:** 不能简单地认为每天上升的高度等于白天向上爬的距离减去夜间下滑的距离，因为若白天能爬出井口，则不必等到晚上。_\n\n### 样例\n```powershell\n> 10 2 1\n9\n```\n\n### 答案\n```python\nhigh, up, down = [int(n) for n in input().split(' ')[:3]]\n\nprogress = 0\ndays = 1\n\nwhile progress < high:\n    progress += up\n    if progress >= high:\n        break\n\n    progress -= down\n    days += 1\n\nprint(days)\n```\n","tags":["测验","比赛"],"categories":["习题"]},{"title":"Hello Shademan","url":"/2021/09/05/hello-shademan/","content":"\n_\\[相互交流, 互相协作, 共创成果, 共铸未来\\]_\n\n## 关于我们\n这是我们学校 \"轻电部\" 社团的内部博客  \n以下是我们的组织账户, 欢迎加入我们:  \n> Github: https://github.com/Shade-Man  \n> Gitee: https://gitee.com/Stars-sea\n\n社团起名灵感来自[《轻音部》](https://zh.moegirl.org.cn/%E8%BD%BB%E9%9F%B3%E9%83%A8), 请二次元热爱者勿喷 ~~(求生欲极强)~~\n\n<!-- more -->\n\n### 关于组织名称\n可能有同学会问: \"这个组织为什么要叫 'Shademan'? \"  \n~~翻译过来是 \"阴间人\", 这是某些人出的馊主意~~  \n在翻译 ~~(机翻)~~ 后发现这个名称还挺酷的\n\n### 关于社团\n> 下面这段文字主要面对普通人\n\n此社团主要进行编程方面的活动, 但请不要被 \"编程\" 二字所吓住  \n(如今编程二字在社交圈上已变味, 只有学编程会秃吗? 如此青春的你现在会秃头吗?)\n\n我们将会努力降低编程学习门槛, 努力做到我们社团的宗旨:  \n> \\[相互交流, 互相协作, 共创成果, 共铸未来\\]\n\n现在是社团(准备)成立初期 _(注意发表时间)_,  \n我们将不会严格按照 \"社团活动形式\" 进行活动, 而是等大部分人具有基础才正式进行活动  \n_欢迎具有编程基础的大佬加入~~当工具人~~帮忙_\n\n另外, 我不敢保证[我](https://github.com/Stars-sea)的技术有多牛,  \n但我可以与即将加入社团的你们相互交流、共同进步\n\n### 对以后的设想\n我希望我们每个人都有所成就, 比如做小游戏、拿些奖项  \n未来我们将计划学习 C# 与 Unity (不知道没关系), 去实现 \"做小游戏\" 这个目标\n\n当然将来被学校拖着去比赛也是不可避免的, 但不必害怕,  \n~~因为炮灰不止你一个~~, 去抱大佬的大腿吧 (互相协作)\n\n祝我们都有所收获和成长 :blush:\n","tags":["信息"],"categories":["说说"]}]